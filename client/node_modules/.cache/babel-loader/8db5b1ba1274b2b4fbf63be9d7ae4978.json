{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/src/client/RecommendationsButton.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { getHashParams } from './spotify-functions';\nvar functionConversion = 'seed_genres=blues&max_valence=0.5'; // function converting from google to spotify will have to convert to string before output: key=value.join('&')\n// will be importing output of function here (likewise ../../server/api/spotify)\n\nvar RecommendationsButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecommendationsButton, _Component);\n\n  function RecommendationsButton() {\n    var _this;\n\n    _classCallCheck(this, RecommendationsButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecommendationsButton).call(this));\n    _this.handleRecommendations =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var token, _ref2, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              token = getHashParams(); //currently hard-coding query string. this will have to be dynamically built in the front-end\n\n              console.log(\"localhost:8080/api/spotify/find?token=\".concat(token.access_token, \"&recommendations?seed_genres=blues&max_valence=0.5\")); // eslint-disable-next-line\n\n              _context.next = 5;\n              return axios.get(\"api/spotify/find?token=\".concat(token.access_token, \"&recommendations?\").concat(functionConversion));\n\n            case 5:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 9]]);\n    }));\n    _this.handleRecommendations = _this.handleRecommendations.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RecommendationsButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleRecommendations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Get Recomendations\");\n    }\n  }]);\n\n  return RecommendationsButton;\n}(Component);\n\nexport { RecommendationsButton as default };","map":{"version":3,"sources":["/Users/kimberleyelcess/Documents/GraceHopper/Senior/my-moodify/src/client/RecommendationsButton.js"],"names":["React","Component","axios","getHashParams","functionConversion","RecommendationsButton","handleRecommendations","token","console","log","access_token","get","data","error","bind"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,IAAMC,kBAAkB,GAAG,mCAA3B,C,CACA;AACA;;IAEqBC,qB;;;;;AACnB,mCAAc;AAAA;;AAAA;;AACZ;AADY,UAIdC,qBAJc;AAAA;AAAA;AAAA;AAAA,6BAIU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,cAAAA,KAFc,GAENJ,aAAa,EAFP,EAGpB;;AACAK,cAAAA,OAAO,CAACC,GAAR,iDAEIF,KAAK,CAACG,YAFV,yDAJoB,CASpB;;AAToB;AAAA,qBAUGR,KAAK,CAACS,GAAN,kCAEnBJ,KAAK,CAACG,YAFa,8BAGDN,kBAHC,EAVH;;AAAA;AAAA;AAUZQ,cAAAA,IAVY,SAUZA,IAVY;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBpBJ,cAAAA,OAAO,CAACK,KAAR;;AAlBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJV;AAEZ,UAAKP,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BQ,IAA3B,uDAA7B;AAFY;AAGb;;;;6BAsBQ;AACP,aACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKR,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAKD;;;;EAhCgDL,S;;SAA9BI,qB","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { getHashParams } from './spotify-functions';\n\nconst functionConversion = 'seed_genres=blues&max_valence=0.5';\n// function converting from google to spotify will have to convert to string before output: key=value.join('&')\n// will be importing output of function here (likewise ../../server/api/spotify)\n\nexport default class RecommendationsButton extends Component {\n  constructor() {\n    super();\n    this.handleRecommendations = this.handleRecommendations.bind(this);\n  }\n  handleRecommendations = async () => {\n    try {\n      const token = getHashParams();\n      //currently hard-coding query string. this will have to be dynamically built in the front-end\n      console.log(\n        `localhost:8080/api/spotify/find?token=${\n          token.access_token\n        }&recommendations?seed_genres=blues&max_valence=0.5`\n      );\n      // eslint-disable-next-line\n      const { data } = await axios.get(\n        `api/spotify/find?token=${\n          token.access_token\n        }&recommendations?${functionConversion}`\n      );\n      //console.log returns the url to the Spotify Play link\n      // console.log(data.tracks[0].external_urls.spotify)\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  render() {\n    return (\n      <button type=\"button\" onClick={this.handleRecommendations}>\n        Get Recomendations\n      </button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}